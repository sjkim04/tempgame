# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1


# Documentation: https://circleci.com/docs/2.0/orb-intro/
orbs:
  # Python Orb documentation: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.2
  coverage-reporter: codacy/coverage-reporter@13.4

# Jobs Docs: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.8
    # Checkout the code as the first step. This is a dedicated CircleCI step.
    # The python orb's install-packages step will install the dependencies from a Pipfile via Pipenv by default.
    # Here we're making sure we use just use the system-wide pip. By default it uses the project root's requirements.txt.
    # Then run your tests!
    # CircleCI will report the results back to your VCS provider.
    environment:
       PIPENV_VENV_IN_PROJECT: true
    steps:
      - checkout
      - restore_cache:  # ensure this step occurs *before* installing dependencies
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - python/install-packages:
          pkg-manager: pipenv
          args: install -r requirements.txt
          # app-dir: ~/project/package-directory/  # If you're requirements.txt isn't in the root directory.
          # pip-dependency-file: test-requirements.txt  # if you have a different name for your requirements file
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
      - run:
          name: Run tests
          command: |
             pipenv run coverage run tests/main.py < tests/inputs/ja/input.txt
             pipenv run coverage run --append tests/main.py < tests/inputs/ja/input1.txt
             pipenv run coverage run --append tests/main.py < tests/inputs/ja/input2.txt
             pipenv run coverage run --append tests/main.py < tests/inputs/ja/input3.txt
             pipenv run coverage run --append tests/main.py < tests/inputs/ja/input4.txt
             pipenv run coverage run --append tests/main.py < tests/inputs/ja/input5.txt
             pipenv run coverage run --append tests/main.py < tests/inputs/ja/input6.txt
      - run:
          name: Export XML
          command: |
            pipenv run coverage report
            pipenv run coverage xml
      - store_test_results:
           path: report.xml
      - coverage-reporter/send_report:
          coverage-reports: report.xml
          project-token: 5b481779574d43c1970889e683dc38af

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  test: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - build-and-test
